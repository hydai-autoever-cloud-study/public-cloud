name: Spring Boot CI/CD with Docker

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  id-token: write
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build with Gradle
        run: ./gradlew clean build -x test

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: DockerHub Upload
        env:
          NAME: ${{ secrets.DOCKERHUB_USERNAME}}
          REPO: public-cloud
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $REPO .
          docker tag $REPO:latest $NAME/$REPO:$IMAGE_TAG
          docker push $NAME/$REPO:$IMAGE_TAG
          

      - name: AWS Role 을 이용한 로그인
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::941377122831:role/public-cloud-image-push-role
          role-session-name: sampleSessionName
          aws-region: ap-northeast-2

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: build and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $ECR_REGISTRY/public-cloud:$IMAGE_TAG .
          docker push $ECR_REGISTRY/public-cloud:$IMAGE_TAG

